name: Python CI

on:
  push:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yml'
  pull_request:
    paths:
      - 'app_python/**'
      - '.github/workflows/app_python.yml'
  workflow_dispatch:

permissions:
  security-events: write

defaults:
  run:
    working-directory: ./app_python

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .

      - name: Tests
        run: unittest ./tests/time_tests.py

      - name: Vulnerability check
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args:
            --sarif-file-output=snyk_results.sarif
            --file=app_python/requirements.txt

      - name: Vulnerability report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk_results.sarif

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: app_python
          file: app_python/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/app-python:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/app-python:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/app-python:buildcache,mode=max